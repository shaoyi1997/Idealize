version: "3.8"
services:
  reverse-proxy:
    image: shaoyi1997/idealize-reverse-proxy:latest
    container_name: reverse-proxy
    restart: always
    networks:
      - frontend
      - backend
    ports:
      - "80:80"
    depends_on:
      - app
      - api

  app:
    image: shaoyi1997/idealize-app:latest
    container_name: app
    restart: always
    depends_on:
      - api
    networks:
      - frontend
    ports:
      - "3000:3000"
    command: ["nginx", "-g", "daemon off;"]

  api:
    image: shaoyi1997/idealize-api
    container_name: api
    restart: always
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://idealize:idealize@postgres:5432/idealize
      NODE_ENV: production
      PORT: 8080
    ports:
      - "8080:8080"
    networks:
      - backend
    volumes:
      - api_node_modules:/app/node_modules
    command: ["yarn", "start"]

  postgres:
    image: postgres:11.9
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    networks:
      - backend
    environment:
      POSTGRES_USER: idealize
      POSTGRES_PASSWORD: idealize
      POSTGRES_DB: idealize
    volumes:
      - pgdata:/var/lib/postgresql/data

networks:
  frontend:
  backend:

volumes:
  pgdata:
  api_node_modules:
  app_node_modules:

version: "3.8"
services:
  reverse-proxy:
    build: ./reverse-proxy
    networks:
      - frontend
      - backend
    ports:
      - "80:80"
    depends_on:
      - app
      - api
    links:
      - app:app
      - api:api

  app:
    build:
      context: ./idealize-app
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    depends_on:
      - api
    links:
      - api:api
    environment:
      NODE_ENV: development
      PORT: 3000
    ports:
      - "3000:3000"
    networks:
      - frontend
    volumes:
      # - ./idealize-app:/app/
      - app_node_modules:/app/node_modules

  api:
    build: ./idealize-api
    depends_on:
      - postgres
    links:
      - postgres:postgres
    environment:
      DATABASE_URL: postgres://idealize:idealize@postgres:5432/idealize
      NODE_ENV: development
      PORT: 8080
    ports:
      - "8080:8080"
    networks:
      - backend
    volumes:
      # - ./idealize-api:/app/
      - api_node_modules:/app/node_modules

  postgres:
    image: postgres:11.9
    ports:
      - "5432:5432"
    networks:
      - backend
    environment:
      POSTGRES_USER: idealize
      POSTGRES_PASSWORD: idealize
      POSTGRES_DB: idealize
    volumes:
      - pgdata:/var/lib/postgresql/data

networks:
  frontend:
  backend:

volumes:
  pgdata:
  api_node_modules:
  app_node_modules:

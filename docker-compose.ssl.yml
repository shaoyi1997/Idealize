version: "3.8"
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-certs:/etc/nginx/certs:ro
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - nginx-conf:/etc/nginx/conf.d
      - nginx-dhparam:/etc/nginx/dhparam
    depends_on:
      - reverse-proxy
    networks:
      - application

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx-certs:/etc/nginx/certs:rw
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - nginx-dhparam:/etc/nginx/dhparam
    environment:
      - DEFAULT_EMAIL=e0310084@u.nus.edu
      - NGINX_PROXY_CONTAINER=nginx-proxy
    depends_on:
      - nginx-proxy
    networks:
      - application

  reverse-proxy:
    image: shaoyi1997/idealize-reverse-proxy:latest
    container_name: reverse-proxy
    restart: always
    expose:
      - "80"
    networks:
      - frontend
      - backend
      - application
    depends_on:
      - app
      - api
    environment:
      - VIRTUAL_HOST=idealize.hongshaoyi.me
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=idealize.hongshaoyi.me
      - LETSENCRYPT_EMAIL=e0310084@u.nus.edu

  app:
    image: shaoyi1997/idealize-app:latest
    container_name: app
    restart: always
    depends_on:
      - api
    networks:
      - frontend
    environment:
      REACT_APP_API_URL: http://idealize.hongshaoyi.me
    command: ["nginx", "-g", "daemon off;"]

  api:
    image: shaoyi1997/idealize-api:latest
    container_name: api
    restart: always
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://idealize:idealize@postgres:5432/idealize
      NODE_ENV: production
      PORT: 8080
    networks:
      - backend
    volumes:
      - api_node_modules:/app/node_modules
    command: ["yarn", "start"]

  postgres:
    image: postgres:11.9
    container_name: postgres
    restart: always
    networks:
      - backend
    environment:
      POSTGRES_USER: idealize
      POSTGRES_PASSWORD: idealize
      POSTGRES_DB: idealize
    volumes:
      - pgdata:/var/lib/postgresql/data

networks:
  frontend:
  backend:
  application:

volumes:
  pgdata:
  api_node_modules:
  app_node_modules:
  nginx-certs:
  nginx-vhost:
  nginx-html:
  nginx-conf:
  nginx-dhparam:
